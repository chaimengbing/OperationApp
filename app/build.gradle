apply plugin: 'com.android.application'

android {

    signingConfigs { //gradle assembleRelease
        release {
            storeFile file("operation.jks")
            storePassword '123456'
            keyAlias "operationkey"
            keyPassword '123456'

        }
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.heroan.operation"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions{
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "boolean", "IS_DEBUG", "false"
            buildConfigField "boolean", "IS_FORMAT_JSON_LOG", "false"
        }

        debug{
            signingConfig signingConfigs.release
            buildConfigField "boolean", "IS_DEBUG", "true"
            buildConfigField "boolean", "IS_FORMAT_JSON_LOG", "false"
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.isDebuggable()) {
                outputFileName = "Operation_V${variant.versionName}_debug_" + buildTime() + ".apk"
            } else {
                outputFileName = "Operation_V${variant.versionName}_release_" + buildTime() + ".apk"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api project(':ZBLibrary')
    api project(':blelibrary')

    implementation 'com.github.vilyever:AndroidSocketClient:2.0.1'
}


def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}
